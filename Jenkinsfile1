#!/usr/bin/env groovy

@Library('shared-library') _ //master or whatever branch

def userInput = input(
  message: 'Which parameter file do you want to use?',
  parameters: [
    [$class: 'ChoiceParameterDefinition', 
     choices: ['file1', 'file2'], 
     description: 'Choose the parameter file to use']
  ]
)

// Load the selected parameter file
def params
switch(userInput) {
  case 'file1':
    params = load('file1.groovy')
    break
  case 'file2':
    params = load('file2.groovy')
    break
  default:
    error "Invalid selection: ${userInput}"
}

// Use the loaded parameters in your build steps
echo "PARAM1: ${params.PARAM1}"
echo "PARAM2: ${params.PARAM2}"


pipeline{
	agent any 
	parameters {
        string(name: 'PARAMETER_1', defaultValue: 'default_value_1', description: 'Description for Parameter 1')
        string(name: 'PARAMETER_2', defaultValue: 'default_value_2', description: 'Description for Parameter 2')
    }
	
   stages{
	 //  stage('Install nginx') {
        //    	steps {
       //     	    nginx-installation()
       //     	}
       //    }
	  // stage('Install Git') {
         //   	steps {
         //   	    git-installation()
       //     	}
	  // }
	     stage('Checkout') {
		    steps{
			git branch: 'main', credentialsId: '326769ca-039c-4630-beb1-6c6f79f78947', url: 'https://github.com/manojsubramaniam/SL-02.git'

		    }
	     }
	     stage('Run My Parameterized Function') {
		    steps {
			my-parameterized-function(parameter1: "${params.PARAMETER_1}", parameter2: "${params.PARAMETER_2}")
		    }
	     }
	     stage("Run Tests") {
		    steps {
			sh "echo SUCCESS on SPRINT"
		    }
	     }
	     stage('SharedLibrary Hello World'){
          	  steps {
              		  helloWorld("manoj", "monday")
           	 }
             }
    
	   stage('Docker Container Clean'){
              steps {
                  sh'docker system prune -a --volumes -f'
                  sh'docker rm -f samplecont'
                  sh'docker rmi -f nginx:alpine'
	            }
	    } 
	    stage('Docker Container'){
        	    steps {
		            //sh'docker exec -it jenkins/jenkins:lts /bin/bash'
                	sh 'docker-compose up -d --build'
            	    }
  	    }
	   
    }
}
